{"version":3,"sources":["Components/Common/formsControls.module.css","Components/Common/startPage.js","Components/API/api.js","Components/Redux/person-reducer.js","Components/Common/formsControls.js","Components/Common/validator.js","Components/Person/createPersonForm.js","Components/Person/createPerson.js","Components/Common/deletePerson.js","Components/Common/updatePerson.js","Components/Person/person.js","Components/Person/personSingle.js","Components/Person/updatePersonContainer.js","Components/Persons/persons.js","Components/Persons/personsContainer.js","Components/Redux/store.js","App.js","serviceWorker.js","index.js","Components/Common/common.module.css","Components/Person/person.module.css"],"names":["module","exports","StartPage","props","className","css","starts","start","to","instance","axios","baseURL","credentials","personAPI","get","then","response","status","data","userId","person","id","put","newFirstName","newLastName","post","firstName","lastName","delete","initialState","persons","personReducer","state","action","type","newUser","addNewUserSucces","setUsersSucces","setUserSucces","getUsers","dispatch","a","getUser","deleteUser","updateUser","Input","input","meta","child","element","showError","touched","error","StyleSheet","warning","requiredField","value","CreatePersonForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","name","validate","CreatePersonComponent","formData","console","log","addNewUser","React","Component","connect","DeletePerson","onDeleteUser","btn","onClick","UpdatePerson","update","this","Person","onUpdateUser","row","col2","link","col","PersonSingle","PersonSingleContainer","window","location","href","split","length","UpdatePersonComponent","initializeData","initialize","Persons","th","users","map","p","PersonsContainer","prevProps","prevState","snapshot","compose","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aba19caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__BnoZj\",\"summaryError\":\"formsControls_summaryError__2-GWB\",\"form\":\"formsControls_form__2Gfyc\"};","import React from 'react';\r\nimport css from './common.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst StartPage = (props) => {\r\n    return (\r\n        <div className = {css.starts}>\r\n            <NavLink className = {css.start} to='/create'>Добавить нового сотрудника</NavLink>\r\n            <NavLink className = {css.start} to='/persons'>Показать всех сотрудников</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage;\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3000',\r\n    credentials: 'include'\r\n});\r\n\r\nexport const personAPI = {\r\n    getUsers() {\r\n        return (\r\n            instance\r\n                .get(`persons`)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        return response.data\r\n                    } \r\n                })\r\n        )\r\n    },\r\n\r\n    getUser(userId) {\r\n        return (\r\n            instance\r\n                .get(`persons/${userId}`)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        return response.data\r\n                    }\r\n\r\n                })\r\n        )\r\n    },\r\n\r\n    updateUser(person) {\r\n        let userId = person.id;\r\n        return (\r\n            instance\r\n                .put(`persons/${userId}`, person)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    addUser({ newFirstName, newLastName }) {\r\n        return (\r\n            instance\r\n                .post(`persons`, { firstName: newFirstName, lastName: newLastName })\r\n                .then(response => {\r\n                    return response\r\n                })\r\n        )\r\n    },\r\n\r\n    deleteUser(userId) {\r\n        return (\r\n            instance\r\n                .delete(`persons/${userId}`)\r\n                .then(response => {\r\n                    return response\r\n                })\r\n        )\r\n    }\r\n}","import { personAPI } from '../API/api.js';\r\n\r\nconst ADD_USER = 'ADD-USER';\r\nconst UPDATE_USER = 'UPDATE-USER';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_USER = 'SET-USER';\r\n\r\nconst initialState = {\r\n    persons: [\r\n        { id: 1, firstName: 'Dave', lastName: 'h' },\r\n        { id: 2, firstName: 'Dove', lastName: 'h' }\r\n    ]\r\n};\r\n\r\nconst personReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            let newUser = {\r\n                id: 3,\r\n                firstName: action.newFirstName,\r\n                lastName: action.newLastName\r\n            }\r\n            return {\r\n                ...state,\r\n                persons: [...state.persons, newUser]\r\n            };\r\n\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                persons: action.persons\r\n            };\r\n\r\n        case SET_USERS:\r\n            return { ...state, persons: action.persons };\r\n\r\n        case SET_USER:\r\n            return { ...state, persons: action.persons };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default personReducer;\r\n\r\n// actionCreator\r\nexport const addNewUserSucces = (persons) => ({ type: ADD_USER, persons });\r\nexport const updateUserSucces = (persons) => ({ type: UPDATE_USER, persons });\r\nexport const setUsersSucces = (persons) => ({ type: SET_USERS, persons });\r\nexport const setUserSucces = (persons) => ({ type: SET_USER, persons });\r\n\r\n// thunkCreator\r\nexport const getUsers = () => async (dispatch) => {\r\n    let response = await personAPI.getUsers();\r\n    dispatch(setUsersSucces(response));\r\n};\r\n\r\nexport const getUser = (userId) => async (dispatch) => {\r\n    let response = await personAPI.getUser(userId);\r\n    dispatch(setUserSucces(response));\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch) => {\r\n    let response = await personAPI.deleteUser(userId);\r\n    dispatch(getUsers());\r\n}\r\n\r\nexport const updateUser = (person) => async (dispatch) => {\r\n    let response = await personAPI.updateUser(person);\r\n    dispatch(setUserSucces(response));\r\n    dispatch(getUsers());\r\n}\r\n\r\nexport const addNewUser = ({ newFirstName, newLastName }) => async (dispatch) => {\r\n    let response = await personAPI.addUser({ newFirstName, newLastName });\r\n    dispatch(addNewUserSucces(response.data));\r\n    dispatch(getUsers());\r\n}","import React from 'react';\r\nimport StyleSheet from './formsControls.module.css';\r\n\r\nexport const Input = ({ input, meta, child, element, ...props }) => {\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={showError ? StyleSheet.error : ''}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {showError && <span>{meta.error}</span> || meta.warning && <span>{meta.warning} </span>}\r\n        </div>\r\n    )\r\n};","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length >  maxLength) return `Max length is ${maxLength} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/formsControls';\r\nimport { requiredField } from '../Common/validator';\r\nimport css from './person.module.css';\r\n\r\nconst CreatePerson = ({ handleSubmit, firstName, lastName }) => {\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit}>\r\n            <Field \r\n            placeholder={firstName ? firstName : 'Введите имя сотрудника'} \r\n            component={Input} name={'newFirstName'}\r\n            validate={[requiredField]} type={'text'}  />\r\n\r\n            <Field \r\n            placeholder={lastName ? lastName : 'Введите фамилию сотрудника'} \r\n            component={Input} name={'newLastName'} validate={[requiredField]} \r\n            value={lastName} type={'text'} />\r\n\r\n            <div>\r\n                <button>Сохранить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nconst CreatePersonForm = reduxForm({\r\n    form: 'person'\r\n})(CreatePerson);\r\n\r\nexport default CreatePersonForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addNewUser } from '../Redux/person-reducer';\r\nimport CreatePersonForm from './createPersonForm';\r\n\r\nclass CreatePersonComponent extends React.Component {\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            console.log(formData);\r\n            this.props.addNewUser(formData)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <CreatePersonForm onSubmit={onSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    firstName: state.persons.firstName,\r\n    lastName: state.persons.lastName\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNewUser })(CreatePersonComponent);","import React from 'react';\r\nimport css from './common.module.css'\r\n\r\n\r\nconst DeletePerson = ( {person, onDeleteUser} ) => {\r\n    return (\r\n        <div>\r\n            <button className = {`${css.btn} ${css.delete}`} onClick = {() => { onDeleteUser(person.id)} } >D</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletePerson;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getUser } from '../Redux/person-reducer';\r\nimport css from './../Person/person.module.css';\r\n\r\nclass UpdatePerson extends React.Component {\r\n\r\n    render() {  \r\n        return (\r\n            <NavLink className = {css.update} to={'/update/' + this.props.person.id} >U</NavLink>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    newFirstName: state.persons.firstName\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getUser })(UpdatePerson);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DeletePerson from '../Common/deletePerson';\r\nimport UpdatePerson from '../Common/updatePerson';\r\nimport css from './person.module.css';\r\n\r\n\r\nconst Person = ({ person, onDeleteUser, onUpdateUser }) => {\r\n\r\n    return (\r\n        <div className={css.row}>\r\n            <div className = {css.col2}>\r\n                <NavLink className={css.link} to={'/person/' + person.id}>\r\n                    <div className={css.col}>\r\n                        {person.firstName}\r\n                    </div>\r\n                    <div className={css.col}>\r\n                        {person.lastName}\r\n                    </div>\r\n                </NavLink >\r\n            </div>\r\n\r\n            <div className={`${css.col} ${css.col2}`}>\r\n                <DeletePerson onDeleteUser={onDeleteUser} person={person} />\r\n            </div>\r\n            <div className={`${css.col} ${css.update} ${css.col2}`}>\r\n                <UpdatePerson onUpdateUser={onUpdateUser} person={person} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person; ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteUser, getUser, updateUser } from '../Redux/person-reducer';\r\nimport Person from './person';\r\n\r\nconst PersonSingle = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <Person person={props} onDeleteUser={props.onDeleteUser}\r\n                onUpdateUser={props.onUpdateUser} />\r\n        </div>\r\n    )\r\n};\r\n\r\nclass PersonSingleContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let currentPath = window.location.href;\r\n        let id = currentPath.split('/');\r\n        this.props.getUser(id[id.length - 1]);\r\n        // console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        return <PersonSingle firstName={this.props.firstName} lastName={this.props.lastName} id={this.props.id}\r\n            onDeleteUser={this.props.deleteUser}\r\n            onUpdateUser={this.props.updateUser} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        firstName: state.persons.persons.firstName,\r\n        lastName: state.persons.persons.lastName,\r\n        id: state.persons.persons.id\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUser, deleteUser, updateUser })(PersonSingleContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initialize } from 'redux-form';\r\nimport { getUser, updateUser } from '../Redux/person-reducer';\r\nimport CreatePersonForm from './createPersonForm';\r\n\r\nclass UpdatePersonComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let person = { firstName: this.props.firstName, lastName: this.props.lastName, id: this.props.id };\r\n        this.props.initializeData(person);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentPath = window.location.href;\r\n        let id = currentPath.split('/');\r\n        this.props.getUser(id[id.length - 1]);\r\n    }\r\n\r\n    onSubmit = (formData) => {\r\n        let currentPath = window.location.href;\r\n        let id = currentPath.split('/');\r\n\r\n        let person = {firstName: formData.newFirstName, lastName: formData.newLastName, id: id[id.length - 1]}\r\n        this.props.updateUser(person)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <CreatePersonForm onSubmit = {this.onSubmit}\r\n            firstName={this.props.firstName} lastName={this.props.lastName}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        firstName: state.persons.persons.firstName,\r\n        lastName: state.persons.persons.lastName,\r\n        id: state.persons.persons.id\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        initializeData: (person) => {\r\n            dispatch(initialize('person', person))\r\n        },\r\n        updateUser: (person) => {\r\n            console.log(person)\r\n            dispatch(updateUser(person))\r\n        },\r\n        getUser: (id) => {\r\n            dispatch(getUser(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePersonComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Person from '../Person/person';\r\nimport { deleteUser, getUsers, updateUser } from '../Redux/person-reducer';\r\nimport css from './../Person/person.module.css';\r\n\r\nclass Persons extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={`${css.row} ${css.th}`}>\r\n                    <div className={css.col}>\r\n                        Имя\r\n                    </div>\r\n                    <div className={css.col}>\r\n                        Фамилия\r\n                    </div>\r\n                    <div className={css.col}>\r\n                        Удалить сотрудника\r\n                    </div>\r\n                    <div className={css.col}>\r\n                        Редактировать сотрудника\r\n                    </div>\r\n                </div>\r\n\r\n                {this.props.users.persons.map(p => <Person\r\n                    person={p}\r\n                    onDeleteUser={this.props.deleteUser}\r\n                    onUpdateUser={this.props.updateUser} />)}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    id: state.persons.id\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUsers, deleteUser, updateUser })(Persons);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { deleteUser, getUsers, updateUser } from '../Redux/person-reducer';\r\nimport Persons from './persons';\r\n\r\nclass PersonsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.users.persons.length != this.props.users.persons.length) {\r\n            this.props.getUsers();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Persons \r\n                users = {this.props.users} \r\n                deleteUser = {this.props.deleteUser} \r\n                updateUser = {this.props.updateUser} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.persons\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsers, deleteUser, updateUser})\r\n)(PersonsContainer);","\r\nimport personReducer from './person-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    persons: personReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport StartPage from './Components/Common/startPage';\nimport CreatePerson from './Components/Person/createPerson';\nimport PersonSingle from './Components/Person/personSingle.js';\nimport UpdatePerson from './Components/Person/updatePersonContainer';\nimport PersonsContainer from './Components/Persons/personsContainer';\nimport store from './Components/Redux/store';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Route path='' render={() => <StartPage />} />\n          <Route path='/persons' render={() => <PersonsContainer />} />\n          <Route path='/person/:userId' render={() => <PersonSingle />} />\n          <Route path='/create' render={() => <CreatePerson />} />\n          <Route path='/update/:userId' render={() => <UpdatePerson />} />\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Components/Redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"common_btn__1z8gv\",\"delete\":\"common_delete__3LCiJ\",\"starts\":\"common_starts__2_lYY\",\"start\":\"common_start__2nwJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"person_row__9bb46\",\"th\":\"person_th__2a-lv\",\"col\":\"person_col__3sqPT\",\"col2\":\"person_col2__1qvHt\",\"link\":\"person_link__ys39Q\",\"btns\":\"person_btns__A1UQW\",\"btn\":\"person_btn__2f376\",\"update\":\"person_update__oi1Ba\"};"],"sourceRoot":""}