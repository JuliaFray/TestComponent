{"version":3,"sources":["Components/Common/FormsControls.module.css","Components/Common/StartPage.js","Components/Common/FormsControls.js","Components/Common/Validator.js","Components/Person/CreatePersonForm.jsx","Components/API/API.js","Components/Redux/person-reducer.js","Components/Person/CreatePerson.jsx","Components/Person/UpdatePersonContainer.jsx","Components/Person/UpdatePersonForm.jsx","Components/Common/DeletePerson.js","Components/Common/UpdatePerson.js","Components/Person/Person.jsx","Components/Persons/Persons.jsx","Components/Persons/PersonsContainer.jsx","Components/Redux/store.js","Components/Person/PersonSingle.jsx","App.js","serviceWorker.js","index.js","Components/Person/Person.module.css","Components/Common/Common.module.css"],"names":["module","exports","StartPage","props","to","Input","input","meta","child","element","showError","touched","error","className","StyleSheet","warning","requiredField","value","CreatePersonForm","reduxForm","form","handleSubmit","firstName","lastName","css","onSubmit","Field","placeholder","component","name","validate","type","instance","axios","baseURL","credentials","personAPI","get","then","response","data","userId","status","person","id","put","newFirstName","newLastName","post","delete","initialState","persons","personReducer","state","action","newUser","setUserSucces","getUsers","dispatch","a","getUser","deleteUser","updateUser","console","log","CreatePersonComponent","formData","addNewUser","React","Component","connect","UpdatePersonComponent","update","window","location","href","split","length","initializeData","this","initialize","DeletePerson","onDeleteUser","btn","onClick","UpdatePerson","Person","onUpdateUser","tbl","col","Persons","users","map","p","PersonsContainer","compose","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","PersonSingle","PersonSingleContainer","App","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e529b7a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2SeOU\",\"summaryError\":\"FormsControls_summaryError__1vHei\",\"form\":\"FormsControls_form__1CYe2\"};","import React from 'react';\r\nimport css from './Common.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst StartPage = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to='/create'>Create New Person</NavLink>\r\n            <NavLink to='/persons'>Show All Persons</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport StyleSheet from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nexport const Input = ({ input, meta, child, element, ...props }) => {\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={showError ? StyleSheet.error : ''}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {showError && <span>{meta.error}</span> || meta.warning && <span>{meta.warning} </span>}\r\n        </div>\r\n    )\r\n};","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length >  maxLength) return `Max length is ${maxLength} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormsControls';\r\nimport css from './Person.module.css';\r\nimport { requiredField } from './../Common/Validator'\r\n\r\nconst CreatePerson = ({ handleSubmit, firstName, lastName }) => {\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit}>\r\n            <Field placeholder={'Enter firstname'} component={Input} name={'newFirstName'}\r\n                validate={[requiredField]} value={firstName} type={'text'} />\r\n\r\n            <Field placeholder={'Enter lastname'} component={Input} name={'newLastName'}\r\n                validate={[requiredField]} value={lastName} type={'text'} />\r\n            <div>\r\n                <button>Отправить данные</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nconst CreatePersonForm = reduxForm({\r\n    form: 'person'\r\n})(CreatePerson);\r\n\r\nexport default CreatePersonForm;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3000',\r\n    credentials: 'include'\r\n});\r\n\r\nexport const personAPI = {\r\n    getUsers() {\r\n        return (\r\n            instance\r\n                .get(`persons`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    getUser(userId) {\r\n        return (\r\n            instance\r\n                .get(`persons/${userId}`)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        return response.data\r\n                    }\r\n\r\n                })\r\n        )\r\n    },\r\n\r\n    updateUser(person) {\r\n        let userId = person.id;\r\n        return (\r\n            instance\r\n                .put(`persons/${userId}`, person)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    addUser({ newFirstName, newLastName }) {\r\n        return (\r\n            instance\r\n                .post(`persons`, { firstName: newFirstName, lastName: newLastName })\r\n                .then(response => {\r\n                    return response\r\n                })\r\n        )\r\n    },\r\n\r\n    deleteUser(userId) {\r\n        return (\r\n            instance\r\n                .delete(`persons/${userId}`)\r\n                .then(response => {\r\n                    return response\r\n                })\r\n        )\r\n    }\r\n}","import { personAPI } from './../API/API.js';\r\n\r\nconst ADD_USER = 'ADD-USER';\r\nconst UPDATE_USER = 'UPDATE-USER';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_USER = 'SET-USER';\r\n\r\nconst initialState = {\r\n    persons: [\r\n        { id: 1, firstName: 'Dave', lastName: 'h' },\r\n        { id: 2, firstName: 'Dove', lastName: 'h' }\r\n    ]\r\n};\r\n\r\nconst personReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            let newUser = {\r\n                id: 3,\r\n                firstName: action.newFirstName,\r\n                lastName: action.newLastName\r\n            }\r\n            return {\r\n                ...state,\r\n                persons: [...state.persons, newUser]\r\n            };\r\n\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                persons: action.persons\r\n            };\r\n\r\n        case SET_USERS:\r\n            return { ...state, persons: action.persons };\r\n\r\n        case SET_USER:\r\n            // debugger\r\n            return { ...state, persons: action.persons };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default personReducer;\r\n\r\n// actionCreator\r\nexport const addNewUserSucces = (persons) => ({ type: ADD_USER, persons });\r\nexport const updateUserSucces = (persons) => ({ type: UPDATE_USER, persons });\r\nexport const setUsersSucces = (persons) => ({ type: SET_USERS, persons });\r\nexport const setUserSucces = (persons) => ({ type: SET_USER, persons });\r\n\r\n// thunkCreator\r\nexport const getUsers = () => async (dispatch) => {\r\n    let response = await personAPI.getUsers();\r\n    dispatch(setUsersSucces(response));\r\n};\r\n\r\nexport const getUser = (userId) => async (dispatch) => {\r\n    // console.log(userId)\r\n    let response = await personAPI.getUser(userId);\r\n    // console.log(response)\r\n    dispatch(setUserSucces(response));\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch) => {\r\n    let response = await personAPI.deleteUser(userId);\r\n    dispatch(getUsers());\r\n}\r\n\r\nexport const updateUser = (person) => async (dispatch) => {\r\n    console.log(person)\r\n    let response = await personAPI.updateUser(person);\r\n    dispatch(setUserSucces(response));\r\n    dispatch(getUsers());\r\n}\r\n\r\nexport const addNewUser = ({ newFirstName, newLastName }) => async (dispatch) => {\r\n    // console.log({newFirstName, newLastName})\r\n    let response = await personAPI.addUser({ newFirstName, newLastName });\r\n    console.log(response)\r\n    dispatch(addNewUserSucces(response.data));\r\n    dispatch(getUsers());\r\n}","import React from 'react';\r\nimport CreatePersonForm from './CreatePersonForm';\r\nimport { connect } from 'react-redux';\r\nimport { addNewUser } from './../Redux/person-reducer';\r\n\r\nclass CreatePersonComponent extends React.Component {\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            console.log(formData);\r\n            this.props.addNewUser(formData)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <CreatePersonForm onSubmit={onSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    firstName: state.persons.firstName,\r\n    lastName: state.persons.lastName\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNewUser })(CreatePersonComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initialize } from 'redux-form';\r\nimport { getUser, updateUser } from '../Redux/person-reducer';\r\nimport UpdatePersonForm from './UpdatePersonForm';\r\nimport CreatePersonForm from './CreatePersonForm'\r\n\r\nclass UpdatePersonComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let person = { firstName: this.props.firstName, lastName: this.props.lastName, id: this.props.id };\r\n        this.props.initializeData(person);\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     let currentPath = window.location.href;\r\n    //     let id = currentPath.split('/');\r\n    //     this.props.getUser(id[id.length - 1]);\r\n    // }\r\n\r\n    onSubmit = (formData) => {\r\n        // event.preventDefault();\r\n        let currentPath = window.location.href;\r\n        let id = currentPath.split('/');\r\n\r\n        console.log(formData);\r\n        let person = {firstName: formData.newFirstName, lastName: formData.newLastName, id: id[id.length - 1]}\r\n        this.props.updateUser(person)\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <CreatePersonForm onSubmit = {this.onSubmit}\r\n            firstName={this.props.firstName} lastName={this.props.lastName}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        firstName: state.persons.persons.firstName,\r\n        lastName: state.persons.persons.lastName,\r\n        id: state.persons.persons.id\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        initializeData: (person) => {\r\n            dispatch(initialize('person', person))\r\n        },\r\n        updateUser: (person) => {\r\n            console.log(person)\r\n            dispatch(updateUser(person))\r\n        },\r\n        getUser: (id) => {\r\n            dispatch(getUser(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePersonComponent);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormsControls';\r\nimport css from './Person.module.css';\r\nimport { requiredField } from './../Common/Validator'\r\n\r\nconst UpdatePerson = ({ handleSubmit, firstName, lastName }) => {\r\n\r\n    return (\r\n        <form className={` ${css.form} ${css.update}`} handleSubmit={handleSubmit}>\r\n            <Field component={Input} name={'firstName'} value={firstName}\r\n                validate={[requiredField]} type={'text'} />\r\n\r\n            <Field component={Input} name={'lastName'} value={lastName}\r\n                validate={[requiredField]}\r\n                type={'text'} />\r\n            <div>\r\n                <button type={'submit'} >Отправить данные</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst UpdatePersonForm = reduxForm({\r\n    form: 'updatePerson'\r\n})(UpdatePerson);\r\n\r\nexport default UpdatePersonForm;\r\n","import React from 'react';\r\nimport css from './Common.module.css'\r\n\r\n\r\nconst DeletePerson = ( {person, onDeleteUser} ) => {\r\n    return (\r\n        <div>\r\n            <button className = {`${css.btn} ${css.delete}`} onClick = {() => { onDeleteUser(person.id)} } >D</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletePerson;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UpdatePersonComponent from '../Person/UpdatePersonContainer';\r\nimport { getUser } from './../Redux/person-reducer';\r\nimport css from './Common.module.css';\r\nimport { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass UpdatePerson extends React.Component {\r\n\r\n    render() {  \r\n        return (\r\n            <NavLink to={'/update/' + this.props.person.id} >Update</NavLink>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    newFirstName: state.persons.firstName\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getUser })(UpdatePerson);\r\n","import React from 'react';\r\nimport css from './Person.module.css'\r\nimport DeletePerson from '../Common/DeletePerson';\r\nimport UpdatePerson from './../Common/UpdatePerson';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Person = ({ person, onDeleteUser, onUpdateUser }) => {\r\n    // console.log(onDeleteUser)\r\n    // console.log('/person/' + person.id)\r\n    return (\r\n        <NavLink to={'/person/' + person.id}>\r\n            \r\n            <div className={css.tbl}>\r\n                <table>\r\n                    <tr>\r\n                        <td className={css.col}>\r\n                            {person.firstName}\r\n                        </td>\r\n                        <td>\r\n                            {person.lastName}\r\n                        </td>\r\n                        <td>\r\n                            <DeletePerson onDeleteUser={onDeleteUser} person={person} />\r\n                        </td>\r\n                        <td>\r\n                            {/* <NavLink to='/userId' >Update</NavLink> */}\r\n                            <UpdatePerson onUpdateUser={onUpdateUser} person={person} />\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </NavLink>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Person; ","import React from 'react';\r\nimport Person from './../Person/Person'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getUsers, deleteUser, updateUser } from './../Redux/person-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Persons extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        return (\r\n            <div>\r\n\r\n                {this.props.users.persons.map(p => <Person\r\n                    person={p}\r\n                    onDeleteUser={this.props.deleteUser}\r\n                    onUpdateUser={this.props.updateUser} />)}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    id: state.persons.id\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUsers, deleteUser, updateUser })(Persons);","import React from 'react';\r\nimport { getUsers, deleteUser, updateUser } from './../Redux/person-reducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Persons from './Persons'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass PersonsContainer extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     // debugger\r\n    //     this.props.getUsers();\r\n    // }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     // console.log(prevProps)\r\n    //     // console.log(this.props)\r\n    //     if (prevProps.users.persons.length != this.props.users.persons.length) {\r\n    //         this.props.getUsers();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Persons \r\n                users = {this.props.users} \r\n                deleteUser = {this.props.deleteUser} \r\n                updateUser = {this.props.updateUser} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.persons\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsers, deleteUser, updateUser})\r\n)(PersonsContainer);","\r\nimport personReducer from './person-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    persons: personReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, deleteUser, updateUser } from './../Redux/person-reducer';\r\nimport Person from './Person';\r\n\r\nconst PersonSingle = (props) => {\r\n    return (\r\n        <div>\r\n            <Person person = {props} />\r\n        </div>\r\n    )\r\n};\r\n\r\nclass PersonSingleContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let currentPath = window.location.href;\r\n        let id = currentPath.split('/');\r\n        this.props.getUser(id[id.length - 1]);\r\n        console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        return <PersonSingle firstName = {this.props.firstName} lastName = {this.props.lastName} id = {this.props.id} onDeleteUser={this.props.deleteUser}\r\n        onUpdateUser={this.props.updateUser}  />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        firstName: state.persons.persons.firstName,\r\n        lastName: state.persons.persons.lastName,\r\n        id: state.persons.persons.id\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUser, deleteUser, updateUser })(PersonSingleContainer);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport StartPage from './Components/Common/StartPage';\nimport CreatePerson from './Components/Person/CreatePerson';\nimport UpdatePerson from './Components/Person/UpdatePersonContainer';\nimport PersonsContainer from './Components/Persons/PersonsContainer';\nimport store from './Components/Redux/store';\nimport PersonSingle from './Components/Person/PersonSingle';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Route path='' render={() => <StartPage />} />\n          <Route path='/persons' render={() => <PersonsContainer />} />\n          <Route path='/person/:userId' render={() => <PersonSingle />} />\n          <Route path='/create' render={() => <CreatePerson />} />\n          <Route path='/update/:userId' render={() => <UpdatePerson />} />\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Components/Redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tbl\":\"Person_tbl__3W8P4\",\"btns\":\"Person_btns__25UWO\",\"btn\":\"Person_btn__2cgnY\",\"update\":\"Person_update__1_6--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Common_btn__3Mzt3\",\"update\":\"Common_update__3Rb_L\",\"delete\":\"Common_delete__JUfDn\"};"],"sourceRoot":""}